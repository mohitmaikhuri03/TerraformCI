pipeline {
    agent any

    tools {
        terraform 'terraform'
    }

    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION    = 'us-east-1'
        repoUrl = 'https://github.com/mohitmaikhuri03/VAULT-TOOL.git'
        credentialsId = 'Personal'
        branch = 'main'
        terraformDir = '.'
        INFRACOST_API_KEY = credentials('INFRACOST_API_KEY')
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Clone Repository') {
            steps {
                script {
                    if (credentialsId) {
                        git branch: branch, url: repoUrl, credentialsId: credentialsId
                    } else {
                        git branch: branch, url: repoUrl
                    }
                }
            }
        }

        stage('Terraform Init') {
            steps {
                dir(terraformDir) {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Format Check') {
            steps {
                dir(terraformDir) {
                    sh 'terraform fmt'
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                dir(terraformDir) {
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Linting') {
            steps {
                dir(terraformDir) {
                    sh ''' 
                        if ! command -v tflint &> /dev/null; then
                            curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
                        fi
                        tflint --format json > tflint_report.json || true
                    '''
                    archiveArtifacts artifacts: 'tflint_report.json', fingerprint: true
                }
            }
        }

        stage('Checkov Security Scan') {
            steps {
                dir(terraformDir) {
                    sh '''
                        if ! command -v checkov &> /dev/null; then
                            pip install --user -q --upgrade checkov
                        fi
                        export PATH=$HOME/.local/bin:$PATH
                        checkov -d . --output json > checkov_report.json || true
                    '''
                    archiveArtifacts artifacts: 'checkov_report.json', fingerprint: true
                }
            }
        }

        stage('Terraform Cost Estimation') {
            steps {
                dir(terraformDir) {
                    withEnv(["INFRACOST_API_KEY=${INFRACOST_API_KEY}"]) {  
                        sh '''
                            if ! command -v infracost >/dev/null 2>&1; then
                                curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
                            fi
                            
                            infracost breakdown --path . --format html > infracost_report.html || true
                        '''
                    }
                    archiveArtifacts artifacts: 'infracost_report.html', fingerprint: true
                }
            }
        }
    }
}
